getwd())
getwd())
getwd()
setwd(~/pagemap_test/)
setwd("~/pagemap_test/"")
setwd("~/pagemap_test/")
getwd()
ls()
ls
dir())
dir()
dir("asr_20160504")
pagemapanalyze("asr_20160504/20160504-182912-pagemap-pid-16698.csv")
install.packages(mpfr)
install.packages(Rmpfr)
install.packages("mpfr")
y
y
install.packages("Rmpfr")
c <- read.csv("asr_20160504/20160504-182912-pagemap-pid-16698.csv")
str(c)
names(c)
head(c)
c <- read.csv("asr_20160504/20160504-182912-pagemap-pid-16698.csv", sep=";", comment.char="#")
names(c)
head(c[,"phys.addr"])
c[,"phys.addr"][1]
as.character(c[,"phys.addr"][1])
mpfr(as.character(c[,"phys.addr"][1]), base=16)
library("Rmpfr")
mpfr(as.character(c[,"phys.addr"][1]), base=16)
c[,"phys.addr"] <- mpfr(as.character(c[,"phys.addr"]), base=16)
m <- mpfr(as.character(c[,"phys.addr"]), base=16)
head(m)
c[,"phys.addr"] <- m
c[,"phys.addr"] <- as.character(m)
head(c[,"phys.addr"])
head()
head(m)
c[,"phys.addr"] <- as.number(m)
c[,"phys.addr"] <- as.decimal(m)
c[,"phys.addr"] <- as.integer(m)
head(c[,"phys.addr"])
count
count())
count()
qplot(phys.addr, data=c)
library(ggplot2)
library(ggplot)
install.packages(ggplot2)
install.packages("ggplot2"")
install.packages("ggplot2")
library("ggplot2")
qplot(phys.addr, data=c)
install.packages("dplyr")
names(c
)
cp <- filter(c, page.present == 1)
cp <- filter(c, "page.present" == 1)
qplot(phys.addr, data=c)
qplot(phys.addr, data=cp)
names(cp)
head(cp)
head(c)
cp <- filter(c, "page.present" == "1")
head(cp)
class(c["page.present"])
class(c["page.present"][1])
class(c[["page.present"]][1])
class(c[["page.present"]])
cp <- filter(c, "page.present" == 1)
head(cp)
c[c$page.present == 1]
c[c$"page.present" == 1]
names(c)
c[,"page.present"]
c[,"page.present" == 1]
c["page.present" == 1]
d <-  c["page.present" == 1]
dim(d)
head(d)
d
head(d)
cp <- filter(c, "page.present" == 1)
dim(cp)
names(cp)
head(cp)
head(c)
qplot(phys.addr, data=c, facets=.~page.present)
qplot(mem.stripe, data=c)
qplot(phys.addr, data=c, facets=.~mem.stripe)
head(c)
subset(c, page.present == 1)
cp <- subset(c, page.present == 1)
qplot(phys.addr, data=cp, facets=.~mem.stripe)
pagemapanalyze("asr_20160504/20160504-203510-pagemap-pid-16701.csv")
f <- "asr_20160504/20160504-203510-pagemap-pid-16701.csv"
c <- read.csv(f, sep=";", comment.char="#")
cp <-  subset(c, page.present == 1)
head(cp)
qplot(phys.addr, data=cp, facets=.~mem.stripe)
> dim(cp)
> dim(cp)
dim(cp)
qplot(phys.addr, data=cp, facets=.~mem.stripe)
qplot(phys.addr, data=cp)
hist(cp)
hist
hist(cp$phys.addr)
hist(as.integer(cp$phys.addr))
head(cp)
cp
cp[, "phys.addr"] <- as.integer(mpfr(as.character(cp[, "phys.addr"]), base=16))
qplot(phys.addr, data=cp, facets=.~mem.stripe)
pagemapanalyze("asr_20160504/20160504-203510-pagemap-pid-16701.csv")
pagemapanalyze("asr_20160504/20160504-210732-pagemap-pid-16703.csv")
head(cp)
cp
cp[,"phys.addr"]
qplot(phys.addr, data=cp, facets=.~mem.stripe, binwidth=2)
qplot(phys.addr, data=cp, facets=.~mem.stripe)
qplot(phys.addr, data=cp, facets=.~mem.stripe, binwidth=1000)
qplot(mem.stripe, data=cp, facets=.~mem.stripe, binwidth=1000)
qplot(mem.stripe, data=cp, facets=.~mem.stripe, binwidth=2)
qplot(mem.stripe, data=cp, facets=.~mem.stripe, binwidth=1)
qplot(mem.stripe, data=cp, binwidth=1)
qplot(mem.stripe, data=cp)
qplot(mem.stripe, data=cp, binwidth=2)
qplot(mem.stripe, data=cp, binwidth=4)
qplot(mem.stripe, data=cp)
pagemapanalyze("asr_20160504/20160504-210732-pagemap-pid-16703.csv")
qplot(phys.addr, data=cp, facets=.~mem.stripe, binwidth=1000)
\
\
\
pagemapanalyze("asr_20160504/20160504-210732-pagemap-pid-16703.csv")
pagemapanalyze("asr_20160504/20160504-210732-pagemap-pid-16703.csv")
qplot(phys.addr, data=cp, fill=mem.stripe)
pagemapanalyze("asr_20160504/20160504-210833-pagemap-pid-16703.csv")
pagemapanalyze("459.GemsFDTD/20160509-150406-pagemap-pid-25092.csv")
pagemapanalyze("459.GemsFDTD/20160509-150406-pagemap-pid-25092.csv")
pagemapanalyze("459.GemsFDTD/20160509-150406-pagemap-pid-25092.csv")
pagemapanalyze("459.GemsFDTD/20160509-150406-pagemap-pid-25092.csv")
pagemapanalyze("459.GemsFDTD/20160509-150406-pagemap-pid-25092.csv")
+ Sourced file '/home/zkosic/pagemap_test/pagemap.R'
pagemapanalyze("459.GemsFDTD/20160509-150406-pagemap-pid-25092.csv")
ppois(10, lambda=5*3)
qnorm(0.95, mean=1100, sd=75)
pnorm(70, mean=80, sd=10, lower.tail=FALSE)
0.84-100
0.84-1
1/32
library(tree)
set.seed(666)
tree.training=tree(classe~.,data=training)
#mod.fit.tree = rpart(classe~., data=training, method="class")
#fancyRpartPlot(mod.fit.tree)
library(caret)
in.train <- createDataPartition(y=train$classe, p=0.7, list=FALSE)
training <- train[ in.train,]
testing  <- train[-in.train,]
dim(training)
dim(testing)
library(tree)
set.seed(666)
mod.fit.tree <- tree(classe~.,data=training)
fancyRpartPlot(mod.fit.tree)
#mod.fit.tree = rpart(classe~., data=training, method="class")
install.pacakges("rattle")
install.packages("rattle")
install.packages("RGtk2")
install.packages("RGtk2")
install.packages("RGtk2")
install.packages("rattle")
library(tree)
library(rattle)
set.seed(666)
mod.fit.tree <- tree(classe~.,data=training)
summary(mod.fit.tree)
library(caret)
library(rattle)
mod.fit.tree <- train(classe ~ .,method="rpart",data=training)
fancyRpartPlot(mod.fit.tree$finalModel)
fancyRpartPlot(mod.fit.tree$finalModel)
fancyRpartPlot(modFit$finalModel)
library(caret)
library(rattle)
mod.fit.tree <- train(classe ~ .,method="rpart",data=training)
install.packages("rpart.plot")
fancyRpartPlot(mod.fit.tree$finalModel)
#fancyRpartPlot(mod.fit.tree$finalModel)
varImpPlot(mod.fit.rf)
knit_with_parameters('~/coursera/practical-machine-learning-assignment/pml-paw.Rmd')
library(slidify)
library(slidifyLibraries)
setwd("~/coursera/data-products-assignment")
dir()
setwd("pitch")
dir()
knit2slides("index.Rmd")
browseURL("index.html")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
mm <- movies
#p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
movies
ggplot2movies::movies
p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
p0 <- ggplot(mm,aes(x=Genre,y=rating)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
require("ggplot2movies")
mm <- ggplot2movies::movies
p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
mm <- ggplot2movies::movies
p0 <- ggplot(mm,aes(x=Genre,y=rating)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
require("ggplot2")
require("ggplot2movies")
mm <- ggplot2movies::movies
p0 <- ggplot(mm,aes(x=Genre,y=rating)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
require("ggplot2")
require("ggplot2movies")
mm <- ggplot2movies::movies
p0 <- ggplot(mm,aes(x=Genre,y=rating)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
p0
require("ggplot2")
require("ggplot2movies")
mm <- ggplot2movies::movies
mm$Genre <- ifelse(mm$Action == 1,"Action",
ifelse(mm$Animation == 1,"Animation",
ifelse(mm$Comedy == 1,"Comedy",
ifelse(mm$Drama == 1,"Drama",
ifelse(mm$Documentary == 1,"Documentary",
ifelse(mm$Romance == 1,"Romance",
ifelse(mm$Short == 1,"Short","none")))))))
mm <- subset(mm, select=-c(Action,Animation,Comedy,Drama,Documentary,Romance,Short))
mm$length.bin <- cut(mm$length, c(0,100,200,300,400,500,600,6000))
p0 <- ggplot(mm,aes(x=Genre,y=rating)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p0 <- p0 + geom_boxplot(aes(fill=Genre)) + ggtitle("Rating per Genre") + xlab("Genre") + ylab("IMDB Rating")
p0
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
knit2slides("index.Rmd")
